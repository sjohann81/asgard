/* based on http://hackersdelight.org/hdcodetxt/transpose32.c.txt */

int A = {		/* Test matrix */
	0x01020304, 0x05060708, 0x090A0B0C, 0x0D0E0F00,
	0xF0E0D0C0, 0xB0A09080, 0x70605040, 0x30201000,
	0x00000000, 0x01010101, 0x02020202, 0x04040404,
	0x08080808, 0x10101010, 0x20202020, 0x40404040,

	0x80808080, 0xFFFFFFFF, 0xFEFEFEFE, 0xFDFDFDFD,
	0xFBFBFBFB, 0xF7F7F7F7, 0xEFEFEFEF, 0xDFDFDFDF,
	0xBFBFBFBF, 0x7F7F7F7F, 0x80000001, 0xC0000003,
	0xE0000007, 0xF000000F, 0xF800001F, 0xFC00003F
};

int AT = {		/* A-transpose */
	0x0C00FFBF, 0x0A017F5F, 0x0F027ECF, 0x0F047DC7,
	0x30087BC3, 0x501077C1, 0x00206FC0, 0xF0405FC0,
	0x0C00FF80, 0x0A017F40, 0x0F027EC0, 0x00047DC0,
	0x30087BC0, 0x501077C0, 0xF0206FC0, 0x00405FC0,

	0x0C00FF80, 0x0A017F40, 0x00027EC0, 0x0F047DC0,
	0x30087BC0, 0x501077C0, 0xF0206FC0, 0xF0405FC0,
	0x0C00FF80, 0x0A017F40, 0x00027EC1, 0x00047DC3,
	0x60087BC7, 0xA01077CF, 0x00206FDF, 0x00405FFF
};

int errors;

func error(int i, int res){
	errors = errors + 1;
	puts("error for i = "); printn(i);
	puts(" got "); printn(res); putchar(0xa);
}

func transpose32(int a){
	int j, k, m, t;

	m = 0x0000ffff;
	j = 16;
	while (j){
		k = 0;
		while (k < 32){
			t = (a[k] ^ (a[k + j] >>> j)) & m;
			a[k] = a[k] ^ t;
			a[k + j] = a[k + j] ^ (t << j);
			k = (k + j + 1) & ~j;
		}
		j = j >> 1;
		m = m ^ (m << j);
	}
}

func main(){
	int i;
	int trial[32];

	i = 0;
	while (i < 32){
		trial[i] = A[i];
		i = i + 1;
	}

	puts("transpose32, forward test:\n");
	transpose32(trial);
	i = 0;
	while (i < 32){
		if (trial[i] != AT[i])
			error(i, trial[i]);
		i = i + 1;
	}

	puts("transpose32, reverse test:\n");
	transpose32(trial);
	i = 0;
	while (i < 32){
		if (trial[i] != A[i])
			error(i, trial[i]);
		i = i + 1;
	}
}
